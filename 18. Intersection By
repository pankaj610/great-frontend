/**
 * Computes the intersection of arrays, returning a new array containing unique values present in all given arrays
 * based on the result of applying an iteratee function to each value.
 *
 * @param {Function} iteratee - The iteratee function to apply to each value.
 * @param {Array[]} arrays - The arrays to perform the intersection on.
 * @returns {Array} - A new array containing the unique values present in all given arrays.
 */
export default function intersectionBy(iteratee, ...arrays) {
  if(arrays.length  == 0) {
    return [];
  }
  let mappedArray = arrays[0].map(value => ({result: iteratee(value), value})); 
  
  for(let i = 1; i < arrays.length; i++) {
    let array = arrays[i];
    let mappedValues = array.map(val => iteratee(val));
    let matchedObj = mappedArray.filter(obj => mappedValues.includes(obj.result));
    mappedArray = matchedObj;
  }
  
  return mappedArray.map(e => e.value);
}
